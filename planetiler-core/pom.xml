<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>planetiler-core</artifactId>

  <name>Planetiler Core</name>
  <description>Planetiler is tool to build planet-scale vector tilesets from OpenStreetMap data fast.</description>

  <parent>
    <groupId>com.onthegomap.planetiler</groupId>
    <artifactId>planetiler-parent</artifactId>
    <version>${revision}</version>
  </parent>

  <properties>
    <geotools.version>30.1</geotools.version>
    <log4j.version>2.22.1</log4j.version>
    <prometheus.version>0.16.0</prometheus.version>
    <protobuf.version>3.25.1</protobuf.version>
    <geopackage.version>6.6.4</geopackage.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.carrotsearch</groupId>
      <artifactId>hppc</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.roaringbitmap</groupId>
      <artifactId>RoaringBitmap</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-ffi</artifactId>
      <version>2.2.15</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>1.19.0</version>
    </dependency>
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-shapefile</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.geotools</groupId>
      <artifactId>gt-epsg-hsql</artifactId>
      <version>${geotools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.44.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.msgpack</groupId>
      <artifactId>msgpack-core</artifactId>
      <version>0.9.6</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
      <version>${prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_common</artifactId>
      <version>${prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_pushgateway</artifactId>
      <version>${prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
      <version>${prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>74.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.0.0-jre</version>
    </dependency>
    <dependency>
      <groupId>mil.nga.geopackage</groupId>
      <artifactId>geopackage</artifactId>
      <version>${geopackage.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- reduce the size of the sources jar a bit (leave behind monaco.osm.pbf and *.zip files) -->
            <excludes>
              <exclude>*.wkb</exclude>
              <exclude>*.mbtiles</exclude>
              <exclude>*.sqlite</exclude>
            </excludes>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>io.github.zlika</groupId>
        <artifactId>reproducible-build-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <!-- The is a serious bug in Maven, seems to be related to https://issues.apache.org/jira/browse/MNG-1388 - see linked issues.
           It's impossible to resolve classifiers of artifacts that are build from a profile within a reactor.
           The next plugin calls will work around that issue by changing the classifier of this artifact into it's own artifact.
      -->
      <build>
        <plugins>
          <!-- Compile and exclude Log4J dependents -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>com/onthegomap/planetiler/util/log4j/**</exclude>
              </excludes>
            </configuration>
          </plugin>
          <!-- Create a jar file (package) without classes, that need to be removed or are replaced by other modules as a artifact classifier. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>native-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>com/onthegomap/planetiler/util/log4j/**</exclude>
                    <exclude>com/onthegomap/planetiler/util/Madvise**</exclude>
                  </excludes>
                  <classifier>native</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Create a copy of the pom.xml file and change it to describe our changed artifact -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <phase>package</phase>
                <configuration>
                  <target>
                    <!-- This is a hack that is needed do avoid Maven property expansion.
                         Ant uses two dollar signs ('$$') instead of one to stop expansion, but this doesn't seem to apply to Maven.
                    -->
                    <property name="property-prefix" value="${"/>
                    <property name="planetiler-revision-token" value="${property-prefix}revision}"/>
                    <property name="planetiler-revision-value" value="${revision}"/>
                    <echo>Copying ./pom.xml to ${project.build.directory}/pom.xml</echo>
                    <copy file="./pom.xml" todir="${project.build.directory}"/>
                    <echo>Replacing artifactId in ${project.build.directory}/pom.xml</echo>
                    <replace file="${project.build.directory}/pom.xml">
                      <replacetoken><![CDATA[<artifactId>planetiler-core</artifactId>]]></replacetoken>
                      <replacevalue><![CDATA[<artifactId>planetiler-core-native</artifactId>]]></replacevalue>
                    </replace>
                    <echo>Replacing ${planetiler-revision-token} with ${planetiler-revision-value} in ${project.build.directory}/pom.xml</echo>
                    <replace file="${project.build.directory}/pom.xml" token="${planetiler-revision-token}" value="${planetiler-revision-value}"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Install the changed jar file (the one with the classifier 'native') under a different artifactID to fix dependency resolution.
               This will use the change pom.xml from above
          -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
            <execution>
            <id>install-native</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}-native</artifactId>
              <version>${revision}</version>
              <packaging>jar</packaging>
              <pomFile>${project.build.directory}/pom.xml</pomFile>
              <file>${project.build.directory}/${project.artifactId}-${revision}-native.jar</file>
            </configuration></execution></executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
