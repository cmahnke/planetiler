<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>planetiler-dist</artifactId>

  <parent>
    <groupId>com.onthegomap.planetiler</groupId>
    <artifactId>planetiler-parent</artifactId>
    <version>${revision}</version>
  </parent>

  <properties>
    <mainClass>com.onthegomap.planetiler.Main</mainClass>
    <!--
    compile against an earlier version so that Main runs but can emit a more readable
    error when running on an older version of Java
    -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <image.version>${project.version}</image.version>
    <image>ghcr.io/onthegomap/planetiler:${image.version}</image>
    <assembly-phase>package</assembly-phase>
    <jib.platform-arch>amd64</jib.platform-arch>
    <jib.platform-os>linux</jib.platform-os>
    <native.maven.plugin.version>0.9.28</native.maven.plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.onthegomap.planetiler</groupId>
      <artifactId>planetiler-benchmarks</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmaptiles</groupId>
      <artifactId>planetiler-openmaptiles</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.onthegomap.planetiler</groupId>
      <artifactId>planetiler-custommap</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.onthegomap.planetiler</groupId>
      <artifactId>planetiler-examples</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Create a container distribution -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
          <from>
            <image>
              eclipse-temurin:21-jre
            </image>
            <platforms>
              <platform>
                <architecture>${jib.platform-arch}</architecture>
                <os>${jib.platform-os}</os>
              </platform>
            </platforms>
          </from>
          <to>
            <image>${image}</image>
          </to>
          <container>
            <labels>
              <org.opencontainers.image.source>
                https://github.com/onthegomap/planetiler
              </org.opencontainers.image.source>
            </labels>
            <mainClass>${mainClass}</mainClass>
            <creationTime>${maven.build.timestamp}</creationTime>
            <filesModificationTime>${maven.build.timestamp}</filesModificationTime>
          </container>
        </configuration>
      </plugin>

      <!-- Create an executable jar from "mvn package" goal -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <dependencies>
          <dependency>
            <groupId>com.onthegomap.planetiler</groupId>
            <artifactId>planetiler-core</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>

        <configuration>
          <archive>
            <manifestEntries>
              <Multi-Release>true</Multi-Release>
            </manifestEntries>
            <manifest>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>with-deps</descriptorRef>
          </descriptorRefs>
          <attach>false</attach>
        </configuration>

        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>${assembly-phase}</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <!-- we don't want to deploy this module -->
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>com/onthegomap/planetiler/util/**</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>shade</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.5.1</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-transform-maven-shade-plugin-extensions</artifactId>
                <version>0.1.0</version>
              </dependency>
            </dependencies>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.logging.log4j.maven.plugins.shade.transformer.Log4j2PluginCacheFileTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Multi-Release>true</Multi-Release>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${mainClass}</mainClass>
                </transformer>
              </transformers>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>com.onthegomap.planetiler:*</artifact>
                  <excludes>
                    <exclude>com/onthegomap/planetiler/util/log4j/**</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>org.apache.logging.log4j:log4j-core</artifact>
                  <includes>
                    <include>org/apache/logging/log4j/util/Strings.class</include>
                    <include>org/apache/logging/log4j/core/util/CloseShieldOutputStream.class</include>
                  </includes>
                </filter>
              </filters>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>com/onthegomap/planetiler/util/**</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.onthegomap.planetiler</groupId>
          <artifactId>planetiler-benchmarks</artifactId>
          <version>${project.parent.version}</version>
          <exclusions>
            <exclusion>
              <groupId>org.apache.logging.log4j</groupId>
              <artifactId>log4j-slf4j2-impl</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.apache.logging.log4j</groupId>
              <artifactId>log4j-api</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.apache.logging.log4j</groupId>
              <artifactId>log4j-core</artifactId>
            </exclusion>
            <exclusion>
              <groupId>com.github.jnr</groupId>
              <artifactId>jnr-ffi</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.openmaptiles</groupId>
          <artifactId>planetiler-openmaptiles</artifactId>
          <version>${project.parent.version}</version>
        </dependency>
        <dependency>
          <groupId>com.onthegomap.planetiler</groupId>
          <artifactId>planetiler-custommap</artifactId>
          <version>${project.parent.version}</version>
        </dependency>
        <dependency>
          <groupId>com.onthegomap.planetiler</groupId>
          <artifactId>planetiler-examples</artifactId>
          <version>${project.parent.version}</version>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>1.4.14</version>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>log4j-over-slf4j</artifactId>
          <version>2.0.10</version>
        </dependency>
        <dependency>
          <groupId>net.java.dev.jna</groupId>
          <artifactId>jna</artifactId>
          <version>5.14.0</version>
        </dependency>
        <dependency>
          <groupId>net.java.dev.jna</groupId>
          <artifactId>jna-platform</artifactId>
          <version>5.14.0</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <agent>
                <enabled>true</enabled>
                <options>
                  <builtinCallerFilter>true</builtinCallerFilter>
                  <builtinHeuristicFilter>true</builtinHeuristicFilter>
                  <enableExperimentalPredefinedClasses>true</enableExperimentalPredefinedClasses>
                  <enableExperimentalUnsafeAllocationTracing>true</enableExperimentalUnsafeAllocationTracing>
                  <trackReflectionMetadata>true</trackReflectionMetadata>
                </options>
              </agent>
              <!--
              <jvmArgs>
                <arg>-Djava.awt.headless=false</arg>
              </jvmArgs>
              -->
              <fallback>false</fallback>
              <verbose>true</verbose>
              <mainClass>${mainClass}</mainClass>
              <!-- - -initialize-at-build-time=org.geotools.util.factory.FactoryRegistry - -initialize-at-build-time=java.awt.Color - -initialize-at-build-time=com.onthegomap.planetiler.util.Madvise -H:-InlineBeforeAnalysis -H:+SupportPredefinedClasses -Djava.awt.headless=true  -->
              <buildArgs>
                <arg>-Djava.awt.headless=false --initialize-at-run-time=java.awt.Toolkit,org.geotools.util.factory.FactoryRegistry,org.geotools.data.util.ColorConverterFactory -R:MaxJavaStackTraceDepth=0 -H:+UnlockExperimentalVMOptions -H:+UseServiceLoaderFeature -march=native -H:+DashboardAll -H:EnableURLProtocols=http,https,file</arg>
              </buildArgs>
              <imageName>planetiler</imageName>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <skip>false</skip>
            </configuration>
            <executions>
              <execution>
                <id>java-agent</id>
                <!-- <phase>process-resources</phase> -->
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>-Djava.awt.headless=false</argument>
                    <argument>-Djava.library.path=${env.JAVA_HOME}/lib</argument>
                    <argument>-classpath</argument>
                    <classpath/>
                    <argument>${mainClass}</argument>
                    <argument>--download=true</argument>
                    <argument>--languages=de,en</argument>
                    <argument>--fetch-wikidata</argument>
                    <argument>--use_wikidata=true</argument>
                    <argument>--area=monaco</argument>
                    <argument>--tile_compression=gzip</argument>
                    <argument>--maxzoom=15</argument>
                    <argument>--building_merge_z13=false</argument>
                    <argument>--render_maxzoom=15</argument>
                    <argument>--force</argument>
                    <argument>--download_dir=../../data/sources</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>native</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <environmentVariables>
                    <LD_LIBRARY_PATH>${env.JAVA_HOME}/lib</LD_LIBRARY_PATH>
                  </environmentVariables>
                  <executable>${project.build.directory}/${imageName}</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <pluginRepositories>
        <pluginRepository>
          <id>graalvm-native-build-tools-snapshots</id>
          <name>GraalVM native-build-tools Snapshots</name>
          <url>https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <!-- use -Pskip-assembly to skip building executable jars -->
      <id>skip-assembly</id>
      <properties>
        <assembly-phase>none</assembly-phase>
      </properties>
    </profile>
    <profile>
      <id>jib-multi-arch</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <configuration>
              <from>
                <platforms>
                  <platform>
                    <architecture>amd64</architecture>
                    <os>linux</os>
                  </platform>
                  <platform>
                    <architecture>arm64</architecture>
                    <os>linux</os>
                  </platform>
                </platforms>
              </from>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
